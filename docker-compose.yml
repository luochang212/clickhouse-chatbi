services:
  # ClickHouse Database
  clickhouse:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: clickhouse-dev
    user: "101:101"
    ports:
      - "18123:8123"
      - "19000:9000"
    volumes:
      - clickhouse_data:/var/lib/clickhouse/
      - clickhouse_logs:/var/log/clickhouse-server/
      - ./backend/init:/docker-entrypoint-initdb.d/
    environment:
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
    ulimits:
      nofile:
        soft: 262144
        hard: 262144
    cap_add:
      - SYS_NICE
      - IPC_LOCK
    restart: unless-stopped
    networks:
      - app-network

  # MCP Service
  mcp-service:
    build:
      context: ./backend
      dockerfile: Dockerfile.mcp
    container_name: mcp-openai-service
    ports:
      - "8001:8001"
      - "8760:8760"
    volumes:
      - ./.env:/app/.env
      - ./backend/log:/app/log
    environment:
      CLICKHOUSE_HOST: clickhouse
      CLICKHOUSE_PORT: 8123
      CLICKHOUSE_USER: ${CLICKHOUSE_USER}
      CLICKHOUSE_PASSWORD: ${CLICKHOUSE_PASSWORD}
      CLICKHOUSE_DATABASE: ${CLICKHOUSE_DATABASE}
      CLICKHOUSE_MCP_SERVER_TRANSPORT: ${CLICKHOUSE_MCP_SERVER_TRANSPORT}
      CLICKHOUSE_MCP_BIND_HOST: localhost
      CLICKHOUSE_MCP_BIND_PORT: ${CLICKHOUSE_MCP_BIND_PORT}
      CLICKHOUSE_SECURE: ${CLICKHOUSE_SECURE}
      CLICKHOUSE_VERIFY: ${CLICKHOUSE_VERIFY}
      DEEPSEEK_BASE_URL: ${DEEPSEEK_BASE_URL}
      DEEPSEEK_API_KEY: ${DEEPSEEK_API_KEY}
      DASHSCOPE_BASE_URL: ${DASHSCOPE_BASE_URL}
      DASHSCOPE_API_KEY: ${DASHSCOPE_API_KEY}
    working_dir: /app
    depends_on:
      - clickhouse
    restart: unless-stopped
    networks:
      - app-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-mydatabase}
    ports:
      - "15432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: redis-cache
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis}
    ports:
      - "16379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - app-network

  # Next.js Frontend
  nextjs:
    image: node:22-alpine
    container_name: nextjs-dev
    ports:
      # - "3000:3000"
      - "0.0.0.0:3000:3000"
    volumes:
      - ./frontend:/app
    working_dir: /app
    env_file:
      - .env
    command: sh -c "chmod +x /app/docker-entrypoint.sh &&
      /app/docker-entrypoint.sh"
    restart: unless-stopped
    depends_on:
      - postgres
      - redis
      - clickhouse
      - mcp-service
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:
  clickhouse_data:
  clickhouse_logs:

networks:
  app-network:
    driver: bridge